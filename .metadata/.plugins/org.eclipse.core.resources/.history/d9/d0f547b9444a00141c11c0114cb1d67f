package com.NaN.nutracker;

import java.io.BufferedReader;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

import org.apache.http.HttpResponse;
import org.apache.http.HttpStatus;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.util.EntityUtils;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.AsyncTask;
import android.preference.PreferenceManager;

public class GetJson extends AsyncTask<String, Void, Boolean> {
	String u, p;
	String result = "fail";
	private ProgressDialog dialog;
	private Activity activity;
	private Context context;

	public GetJson(Activity activity) {
		this.activity = activity;
		context = activity;
		dialog = new ProgressDialog(context);
	}

	@Override
	protected Boolean doInBackground(String... params) {
		// TODO Auto-generated method stub
		this.u = params[0];
		this.p = params[1];

		return GetSomething();
	}

	final boolean GetSomething() {
		boolean correct = false;
		String query = ("username=" + md5(u) + "&password=" + md5(p));
		String responseBody;
		String url = "http://142.55.49.127/WebAPI/api/Login?" + query;
		BufferedReader inStream = null;
		try {
			HttpClient httpClient = new DefaultHttpClient();
			HttpPost httpRequest = new HttpPost(url);
			httpRequest.setHeader("Content-Type",
					"application/x-www-form-urlencoded;charset=UTF-8");
			HttpResponse response = httpClient.execute(httpRequest);
			// Log.wtf("HTTPRESPONSE",
			// ""+response.getStatusLine().getStatusCode());
			// Log.wtf("SENTURL", url);

			if (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {
				correct = true;
				responseBody = EntityUtils.toString(response.getEntity());
				//Log.wtf("RESPONSE-BODY", responseBody);
				
				SharedPreferences sharedsettings = activity.getSharedPreferences("nuview", Context.MODE_PRIVATE); 

					SharedPreferences.Editor editor = sharedsettings.edit();
					editor.putString("driverId", responseBody);
					editor.commit();
				
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		this.dialog.dismiss();
		return (correct);

	}

	protected void onPostExecute(String result) {
		

	}

	@Override
	protected void onPreExecute() {
		this.dialog.setMessage("Logging In!");
		this.dialog.show();

	}
	/**
	 * 
	 * @param s string to beccome encrypted through MD5
	 * @return returns the encrypted string
	 */
	public static String md5(String s) {
		try {

			// Create MD5 Hash
			MessageDigest digest = java.security.MessageDigest
					.getInstance("MD5");
			digest.update(s.getBytes());
			byte messageDigest[] = digest.digest();

			// Create Hex String
			StringBuffer hexString = new StringBuffer();
			for (int i = 0; i < messageDigest.length; i++) {
				String hex = Integer.toHexString(0xFF & messageDigest[i]);
				if (hex.length() == 1) {
					hexString.append('0');
				}
				hexString.append(hex);
			}
			return hexString.toString();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
		return "";

	}

}
