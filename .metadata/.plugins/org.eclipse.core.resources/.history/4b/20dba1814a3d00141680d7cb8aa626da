package com.NaN.nutracker;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.widget.TextView;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class GetJson extends AsyncTask<TextView, Void, String[]> {
	private ProgressDialog pd;
	TextView t;
	String result = "fail";

	@Override
	protected String[][] doInBackground(TextView... params) {
		// TODO Auto-generated method stub
		this.t = params[0];
		return getUsernames();
	}

	final String GetSomething() {
		String url = "http://142.55.49.127/WebAPI/api/AccountApi";
		BufferedReader inStream = null;
		try {
			HttpClient httpClient = new DefaultHttpClient();
			HttpGet httpRequest = new HttpGet(url);
			HttpResponse response = httpClient.execute(httpRequest);
			inStream = new BufferedReader(new InputStreamReader(response
					.getEntity().getContent()));

			StringBuffer buffer = new StringBuffer("");
			String line = "";
			String NL = System.getProperty("line.separator");
			while ((line = inStream.readLine()) != null) {
				buffer.append(line + NL);
			}
			inStream.close();

			result = buffer.toString();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			if (inStream != null) {
				try {
					inStream.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return (result);

	}

	protected void onPostExecute(String result) {
		//t.setText(result);
	}
	
	@Override
    protected void onPreExecute() {
        // TODO Auto-generated method stub
//Your optional view and where it starts
	}

	public String[][] getUsernames() {
		String json = GetSomething();
		JsonElement jelement = new JsonParser().parse(json);
		JsonObject jobject = new JsonObject();
		JsonArray jarray = jelement.getAsJsonArray();
		String [][] parsedJson = new String [jarray.size()][2];
		for (int i = 0; i < jarray.size(); i++) {
				jobject = jarray.get(i).getAsJsonObject();
				String use= (jobject.get("Username").toString());
				String pass= (jobject.get("Password").toString());
				parsedJson[i][0] = use.replace("\"", "");
				parsedJson[i][1] = use.replace("\"", "");
			

		}
		return parsedJson;
	}
}
