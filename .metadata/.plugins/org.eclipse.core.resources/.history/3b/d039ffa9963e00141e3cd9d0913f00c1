package com.NaN.nutracker;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.AsyncTask;

import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

public class GetJson extends AsyncTask<String, Void, Boolean> {
	String u, p;
	String result = "fail";
	private ProgressDialog dialog;
	private Activity activity;
	private Context context;
	
	public GetJson(Activity activity){
		this.activity = activity;
		context = activity;
        dialog = new ProgressDialog(context);
	}
	
	@Override
	protected Boolean doInBackground(String... params) {
		// TODO Auto-generated method stub
		this.u = params[0];
		this.p = params[1];

		return getUsernames();
	}
	
	
		

	final String GetSomething() {
		String url = "http://142.55.49.127/WebAPI/api/AccountApi";
		BufferedReader inStream = null;
		try {
			HttpClient httpClient = new DefaultHttpClient();
			HttpGet httpRequest = new HttpGet(url);
			HttpResponse response = httpClient.execute(httpRequest);
			inStream = new BufferedReader(new InputStreamReader(response
					.getEntity().getContent()));

			StringBuffer buffer = new StringBuffer("");
			String line = "";
			String NL = System.getProperty("line.separator");
			while ((line = inStream.readLine()) != null) {
				buffer.append(line + NL);
			}
			inStream.close();

			result = buffer.toString();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			if (inStream != null) {
				try {
					inStream.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
		return (result);

	}

	protected void onPostExecute(String result) {
		// t.setText(result);
		
	}
	

	@Override
	protected void onPreExecute() {
		// TODO Auto-generated method stub
		this.dialog.setMessage("Logging In!");
        this.dialog.show();

	}

	public boolean getUsernames() {
		String json = GetSomething();
		boolean correct = false;
		JsonElement jelement = new JsonParser().parse(json);
		JsonObject jobject = new JsonObject();
		JsonArray jarray = jelement.getAsJsonArray();
		String[][] parsedJson = new String[jarray.size()][2];
		for (int i = 0; i < jarray.size(); i++) {
			jobject = jarray.get(i).getAsJsonObject();
			String use = (jobject.get("Username").toString());
			String pass = (jobject.get("Password").toString());
			parsedJson[i][0] = use.replace("\"", "");
			parsedJson[i][1] = pass.replace("\"", "");

		}

		for (int i = 0; i < parsedJson.length; i++) {
			if (parsedJson[i][0].equalsIgnoreCase(u)) {
				if (parsedJson[i][1].equals(p)) {
					correct = true;
				}
			}
		}
		if (dialog.isShowing()) {
            dialog.dismiss();
            
        }
		return correct;
	}
}
