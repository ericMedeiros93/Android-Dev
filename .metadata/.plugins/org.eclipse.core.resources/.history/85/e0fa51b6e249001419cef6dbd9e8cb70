package com.NaN.nutracker;

import java.text.DateFormatSymbols;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import android.app.ActionBar;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.DatePickerDialog;
import android.app.Dialog;
import android.app.DialogFragment;
import android.app.Fragment;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class Claim extends Activity {
	static int selectedYear;
	static int selectedDay;
	static int selectedMonth;
	final int camera_result_code = 200;
	final int gallery_result_code = 200;
	private String driverId = "";
	PictureAdapter adapt;
	List<DamagePicture> list = null;
	int PictureNum = 1;
	TextView pListText;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_claim);

		if (savedInstanceState == null) {
			getFragmentManager().beginTransaction()
					.add(R.id.container, new PlaceholderFragment()).commit();
		}
		ActionBar actionBar = getActionBar();
		actionBar.setHomeButtonEnabled(true);
		pListText = (TextView) findViewById(R.id.photoListDesc);
		//populateList();
		
		SharedPreferences userPrefs = 
				getSharedPreferences("nuview", MODE_PRIVATE);
		driverId = userPrefs.getString("driverId", "");
		//Toast.makeText(this, driverId, Toast.LENGTH_SHORT).show();

		Calendar c = Calendar.getInstance(); 
		String Time = ""+c.getTime();
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {

		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.claim, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

	/**
	 * A placeholder fragment containing a simple view.
	 */
	public static class PlaceholderFragment extends Fragment {

		public PlaceholderFragment() {
		}

		@Override
		public View onCreateView(LayoutInflater inflater, ViewGroup container,
				Bundle savedInstanceState) {
			View rootView = inflater.inflate(R.layout.fragment_claim,
					container, false);
			return rootView;
		}
	}
	
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	    if (requestCode == camera_result_code) {
	        if (resultCode == RESULT_OK) {
	            // Image captured and saved to fileUri specified in the Intent
	        	if(list == null){

	    			pListText.setVisibility(View.VISIBLE);
	    			populateList();
	    		}else{

	    			pListText.setVisibility(View.VISIBLE);
	    			if(selectedDay == 0 && selectedMonth == 0 && selectedYear == 0){
	    				String strDate = new DateFormatSymbols().getMonths()[selectedMonth] +"."+selectedDay+"."+selectedYear;
	    				EditText routeNum = (EditText) findViewById(R.id.routeNum);
	    				list.add(new DamagePicture((routeNum.getText().toString()+"."+strDate+"."+PictureNum+".jpg"), true));
	    			}else{
	    				
	    				String strDate = new DateFormatSymbols().getMonths()[selectedMonth] +"."+selectedDay+"."+selectedYear;
	    				EditText routeNum = (EditText) findViewById(R.id.routeNum);
	    				list.add(new DamagePicture((routeNum.getText().toString()+"."+strDate+"."+PictureNum+".jpg"), true));
	    			}
	    			adapt.notifyDataSetChanged();
	    			PictureNum++;
	    		}
	        } else if (resultCode == RESULT_CANCELED) {
	            // User cancelled the image capture
	        } else {
	            // Image capture failed, advise user
	        }
	    }
	}
	
	public void populateList(){
		ArrayList<DamagePicture> pictures = new ArrayList<DamagePicture>();
		//for(int i =0; i < pictures.length; i++){
			//pictures[i]  = new DamagePicture(String.valueOf(i), true);
		//}
		if(selectedDay == 0 && selectedMonth == 0 && selectedYear == 0){

			String strDate = new DateFormatSymbols().getMonths()[selectedMonth] +"."+selectedDay+"."+selectedYear;
			EditText routeNum = (EditText) findViewById(R.id.routeNum);
			pictures.add(new DamagePicture((routeNum.getText().toString()+"."+strDate+"."+PictureNum+".jpg"), true));
		}else{
			
			String strDate = new DateFormatSymbols().getMonths()[selectedMonth] +"."+selectedDay+"."+selectedYear;
			EditText routeNum = (EditText) findViewById(R.id.routeNum);
			pictures.add(new DamagePicture((routeNum.getText().toString()+"."+strDate+"."+PictureNum+".jpg"), true));
		}
		PictureNum++;
		list = pictures;
		adapt=new PictureAdapter(this,R.layout.picture_row_layout , list);
		ListView listTask=(ListView)findViewById(R.id.pictureList);
		listTask.setAdapter(adapt);
	}
	
	/**
	 * Opens up the Camera Intent so the user can take a picture.
	 * Does not store the picture in a particular place at this
	 * time.
	 * @param view
	 */
	public void openCamera(View view){
		
		Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
		startActivityForResult(intent, camera_result_code);
		
	}
	
	public void sendData(View view){
		EditText edtDescription = (EditText) findViewById(R.id.desc);
		Calendar c = Calendar.getInstance(); 
		String Time = ""+c.getTime();
		String [] params = {driverId,edtDescription.getText().toString(), "" };
		Toast.makeText(this, Time, Toast.LENGTH_LONG).show();
		finish();
	}
	public void selectImage(View view) {
		final CharSequence[] items = { "Take Photo", "Choose from Library",
				"Cancel" };

		AlertDialog.Builder builder = new AlertDialog.Builder(Claim.this);
		builder.setTitle("Add Photo");
		builder.setItems(items, new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int item) {
				if (items[item].equals("Take Photo")) {
					Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
					startActivityForResult(intent, camera_result_code);
				} else if (items[item].equals("Choose from Library")) {
					Intent intent = new Intent(
							Intent.ACTION_PICK,
							android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
					intent.setType("image/*");
					startActivityForResult(
							Intent.createChooser(intent, "Select File"),
							gallery_result_code);
				} else if (items[item].equals("Cancel")) {
					dialog.dismiss();
				}
			}
		});
		builder.show();
	}
	
	public void showDatePickerDialog(View v) {
	    DialogFragment newFragment = new DatePickerFragment();
	    newFragment.show(getFragmentManager(), "datePicker");
	}

	public static class DatePickerFragment extends DialogFragment implements
			DatePickerDialog.OnDateSetListener {

		@Override
		public Dialog onCreateDialog(Bundle savedInstanceState) {
			// Use the current date as the default date in the picker
			final Calendar c = Calendar.getInstance();
			int year = c.get(Calendar.YEAR);
			int month = c.get(Calendar.MONTH);
			int day = c.get(Calendar.DAY_OF_MONTH);

			// Create a new instance of DatePickerDialog and return it
			return new DatePickerDialog(getActivity(), this, year, month, day);
		}

		@Override
		public void onDateSet(DatePicker view, int year, int monthOfYear,
				int dayOfMonth) {
			// TODO Auto-generated method stub
			selectedDay = dayOfMonth;
			selectedYear = year;
			selectedMonth = monthOfYear;
			EditText et = (EditText)getActivity().findViewById(R.id.routeDateClaim);
			String date = new DateFormatSymbols().getMonths()[selectedMonth] +" "+selectedDay+", "+selectedYear;
			et.setText(date);
			
			

		}

	}
	
	

}
